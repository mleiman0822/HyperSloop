// <auto-generated />
using System;
using HyperSloopApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HyperSloopApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210604185412_inital")]
    partial class inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("HyperSloopApp.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("LocationId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Name = "BNG"
                        },
                        new
                        {
                            LocationId = 2,
                            Name = "BNG South"
                        });
                });

            modelBuilder.Entity("HyperSloopApp.Models.Slide", b =>
                {
                    b.Property<int>("SlideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EndingFloor")
                        .HasColumnType("int");

                    b.Property<double>("HeightInFeet")
                        .HasColumnType("double");

                    b.Property<string>("HexColor")
                        .HasColumnType("longtext");

                    b.Property<double>("LengthInFeet")
                        .HasColumnType("double");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("StartingFloor")
                        .HasColumnType("int");

                    b.HasKey("SlideId");

                    b.HasIndex("LocationId");

                    b.ToTable("Slides");

                    b.HasData(
                        new
                        {
                            SlideId = 1,
                            EndingFloor = 1,
                            HeightInFeet = 50.0,
                            HexColor = "#0000FF",
                            LengthInFeet = 50.0,
                            LocationId = 1,
                            StartingFloor = 3
                        },
                        new
                        {
                            SlideId = 2,
                            EndingFloor = 1,
                            HeightInFeet = 25.0,
                            HexColor = "#FF0000",
                            LengthInFeet = 25.0,
                            LocationId = 1,
                            StartingFloor = 2
                        },
                        new
                        {
                            SlideId = 3,
                            EndingFloor = 2,
                            HeightInFeet = 20.0,
                            HexColor = "#FFFF00",
                            LengthInFeet = 20.0,
                            LocationId = 1,
                            StartingFloor = 3
                        });
                });

            modelBuilder.Entity("HyperSloopApp.Models.SlideEvent", b =>
                {
                    b.Property<int>("SlideEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Duration")
                        .HasColumnType("double");

                    b.Property<int>("SlideId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(255)");

                    b.HasKey("SlideEventId");

                    b.HasIndex("UserEmail");

                    b.ToTable("SlideEvents");

                    b.HasData(
                        new
                        {
                            SlideEventId = 1,
                            Duration = 10.0,
                            SlideId = 1,
                            StartTime = new DateTime(2021, 6, 4, 13, 54, 12, 131, DateTimeKind.Local).AddTicks(1934),
                            UserEmail = "matthew.leiman@bngholdingsinc.com"
                        });
                });

            modelBuilder.Entity("HyperSloopApp.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Email = "matthew.leiman@bngholdingsinc.com",
                            Name = "Matthew Leiman"
                        },
                        new
                        {
                            Email = "JasonBourne@jb.com",
                            Name = "Jason Bourne"
                        });
                });

            modelBuilder.Entity("HyperSloopApp.Models.Slide", b =>
                {
                    b.HasOne("HyperSloopApp.Models.Location", "Location")
                        .WithMany("Slides")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HyperSloopApp.Models.SlideEvent", b =>
                {
                    b.HasOne("HyperSloopApp.Models.User", null)
                        .WithMany("SlideEvents")
                        .HasForeignKey("UserEmail");
                });

            modelBuilder.Entity("HyperSloopApp.Models.Location", b =>
                {
                    b.Navigation("Slides");
                });

            modelBuilder.Entity("HyperSloopApp.Models.User", b =>
                {
                    b.Navigation("SlideEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
