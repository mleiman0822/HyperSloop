// <auto-generated />
using System;
using HyperSloopApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HyperSloopApp.Migrations
{
    [DbContext(typeof(HyperSloopContext))]
    partial class HyperSloopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HyperSloopApp.Models.Events", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KeyCardId")
                        .HasColumnType("int");

                    b.Property<int>("SensorId")
                        .HasColumnType("int");

                    b.Property<int?>("UserCardKeyCardId")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("UserCardKeyCardId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HyperSloopApp.Models.Sensors", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SensorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SlideId")
                        .HasColumnType("int");

                    b.HasKey("SensorId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("HyperSloopApp.Models.Slide", b =>
                {
                    b.Property<int>("SlideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndFloor")
                        .HasColumnType("int");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<int?>("SensorsSensorId")
                        .HasColumnType("int");

                    b.Property<int>("StartFloor")
                        .HasColumnType("int");

                    b.HasKey("SlideId");

                    b.HasIndex("SensorsSensorId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("HyperSloopApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HyperSloopApp.Models.UserCard", b =>
                {
                    b.Property<int>("KeyCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("KeyCardId");

                    b.ToTable("UserCar");
                });

            modelBuilder.Entity("HyperSloopApp.Models.Events", b =>
                {
                    b.HasOne("HyperSloopApp.Models.UserCard", null)
                        .WithMany("Events")
                        .HasForeignKey("UserCardKeyCardId");
                });

            modelBuilder.Entity("HyperSloopApp.Models.Slide", b =>
                {
                    b.HasOne("HyperSloopApp.Models.Sensors", "Sensors")
                        .WithMany("Slides")
                        .HasForeignKey("SensorsSensorId");

                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("HyperSloopApp.Models.Sensors", b =>
                {
                    b.Navigation("Slides");
                });

            modelBuilder.Entity("HyperSloopApp.Models.UserCard", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
